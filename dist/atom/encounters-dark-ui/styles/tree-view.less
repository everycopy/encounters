@import "ui-variables";

.tree-view {
  font-size: @font-size;
  background: @tree-view-background-color;

  .selected:before {
  	background: @base-03;
  }

  li:not(.list-nested-item),
  li.list-nested-item > .list-item {
    .text(subtle);
  }

  &:hover {
    .list-group, .list-tree {
      li:not(.list-nested-item),
      li.list-nested-item > .list-item {
        .text(normal);
        transition: color .1s ease-in;
      }

      .generate-list-item-text-color(@class) {
        li:not(.list-nested-item).text-@{class},
        li.list-nested-item.text-@{class} > .list-item {
          .text(@class);
        }
      }
      .generate-list-item-text-color(subtle);
      .generate-list-item-text-color(info);
      .generate-list-item-text-color(success);
      .generate-list-item-text-color(warning);
      .generate-list-item-text-color(error);
      .generate-list-item-text-color(selected);

      .generate-list-item-status-color(@color, @status) {
        li:not(.list-nested-item).status-@{status},
        li.list-nested-item.status-@{status} > .list-item {
          color: @color;
        }
      }

      .generate-list-item-status-color(@text-color-subtle, ignored);
      .generate-list-item-status-color(@text-color-added, added);
      .generate-list-item-status-color(@text-color-renamed, renamed);
      .generate-list-item-status-color(@text-color-modified, modified);
      .generate-list-item-status-color(@text-color-removed, removed);

      li:not(.list-nested-item).selected,
      li.list-nested-item.selected > .list-item {
        .text(selected);
      }
    }
  }
}
